// ----------------------------------------------------------------------------
// Buttons
// ----------------------------------------------------------------------------

/**
This is a system for easiliy creating buttons, and spinning up new button
styles.
This uses a mixin that can be found at /util/mixins/_buttons.scss
*/


// Base button styles
// ------------------

button,
.button {
  @include typesize(0);
  display: inline-block;
  font-weight: inherit;
  border-radius: $base-radius;
  line-height: inherit;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  padding: spacing(.5) spacing(1);
  border: 2px solid transparent;
  background: $primary;
  transition: all $base-time $base-ease;
  text-decoration: none;
  color:white;


  &:active,
  &:hover,
  &:focus {
    background: darken($primary, 20%);
    text-decoration: none;
    outline: 0;
    background-image: none;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: .65;
    box-shadow: none;
  }
}

.button-download {
   display: block;
   margin-bottom: space(2);
   background-color: #306efe;
   border-radius: 100px;
   color: $white;
   padding: space(2) space(4);
   border: none;
   transition: all .3s ease;
   font-weight: bold;

   &:hover {
     background-color: darken(#306efe, 10%);
   }
}

// Variables
// ---------

$_button-primary-color: $white;
$_button-primary-color-hover: $white;
$_button-primary-bg:  $primary;
$_button-primary-bg-hover: darken($primary, 10%);
$_button-primary-border: $primary;
$_button-primary-border-hover: darken($primary, 10%);

$_button-secondary-color: $white;
$_button-secondary-color-hover: $white;
$_button-secondary-bg: #1a1a1a;
$_button-secondary-bg-hover: lighten(#1a1a1a, 10%);


/**
Main Buttons
Copied from buttons mixin. You can create a new button like so:
.button--modifier {
  @include button-variant($color, color-hover, background, $background-hover, $border, $border-hover)
}
Note that $background-hover, $border, & $border-hover are optional
Takes a few variables and creates a new button style
@param {color}: color of button text
@param {color-hover} color of button text on hover
@param {background}: color of button background
@param {background-hover} color of button on hover
@param {border} color of button border (defaults to background color)
@param {border-hover} color of border on hover (defaults to hover bg color)
*/

// Button Variations
// ------------------

.button--primary {
  @include button-variant(
    $_button-primary-color,
    $_button-primary-color-hover,
    $_button-primary-bg,
    $_button-primary-bg-hover,
    $_button-primary-border,
    $_button-primary-border-hover
  );
}

.button--secondary {
  @include button-variant(
    $_button-secondary-color,
    $_button-secondary-color-hover,
    $_button-secondary-bg,
    $_button-secondary-bg-hover
  );
}


/**
Outline Buttons
Takes a few variables and creates a new button style
Copied from buttons mixin. You can create a new button like so:
.button-outline--modifier {
  @include($color, $border, $background-hover, $color-hover, $border-hover)
}
only first param is required
@param {color}: color of button text
@param {border} color of button outline/border (default: $color)
@param {background-hover}: color of background on hover (default: $color)
@param {color-hover} color of text on hover (default: $white)
@param {border-hover} color of border on hover (default: $background-hover)
*/

// Outline Button Variations
// ----------------------

.button-outline--primary {
  @include button-outline-variant($_button-primary-bg);
}

.button-outline--secondary {
  @include button-outline-variant($_button-secondary-bg);
}



// Button Sizes
// ------------

.button--large {
  @include typesize(1);
  padding: .75rem 1.25rem;
}

.button--small {
  @include typesize(-1);
  padding: .25rem .75rem;
}



// Block button
// ------------

.button--block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.button--block + .button--block {
  margin-top: spacing(1);
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.button--block {
    width: 100%;
  }
}

// Other Sizes
$base-border-radius: 3px;
$base-spacing: $base-line-height * 1em;
$small-spacing: $base-spacing / 2;
$base-z-index: 0;

// Font Colors
$base-background-color: #fff;
$base-font-color: #333;
$action-color: $blue;

// Border
$base-border-color: #ccc;
$base-border: 1px solid $base-border-color;

// Forms
$form-box-shadow: inset 0 1px 3px rgba(#000, 0.06);
$form-box-shadow-focus: $form-box-shadow, 0 0 5px adjust-color($action-color, $lightness: -5%, $alpha: -0.3);

fieldset {
  background-color: lighten($base-border-color, 10%);
  border: $base-border;
  margin: 0 0 $small-spacing;
  padding: $base-spacing;
}

input,
label,
select {
  display: block;
  font-family: $base-font-family;
  font-size: $base-font-size;
}

label {
  margin-bottom: $small-spacing / 2;

  &.required::after {
    content: "*";
  }

  abbr {
    display: none;
  }
}

input,textarea {
  background-color: $base-background-color;
  border: $base-border;
  border-radius: $base-border-radius;
  box-shadow: $form-box-shadow;
  box-sizing: border-box;
  font-family: $base-font-family;
  font-size: $base-font-size;
  margin-bottom: $base-spacing / 2;
  padding: $base-spacing / 3;
  transition: border-color;

  &:hover {
    border-color: darken($base-border-color, 10%);
  }

  &:focus {
    border-color: $action-color;
    box-shadow: $form-box-shadow-focus;
    outline: none;
  }
}

input[type="text"], input[type="tel"],input[type="email"], textarea
{
  width: 100%;
}

input[type="checkbox"]{
  display: inline;
  margin-right: 0.5em;
}

textarea {
  resize: vertical;
}

select {
  margin-bottom: $base-spacing;
  max-width: 100%;
  width: auto;
}
.checkmark__circle {
    stroke-dasharray: 166;
    stroke-dashoffset: 166;
    stroke-width: 2;
    stroke-miterlimit: 10;
    stroke: $blue;
    fill: none;
    animation: stroke .6s cubic-bezier(.65, 0, .45, 1)forwards;
}
.checkmark {
    width: 56px;
    height: 56px;
    border-radius: 50%;
    display: block;
    stroke-width: 2;
    stroke: #fff;
    stroke-miterlimit: 10;
    margin: 20px auto;
    box-shadow: inset 0 0 0 $blue;
    animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both;
}
.checkmark__check {
    transform-origin: 50% 50%;
    stroke-dasharray: 48;
    stroke-dashoffset: 48;
    animation: stroke .3s cubic-bezier(.65, 0, .45, 1).8s forwards;
}
@keyframes stroke {
    100% {
    stroke-dashoffset: 0;
}
}@keyframes scale {
    0%, 100% {
    transform: none;
}
50% {
    transform: scale3d(1.1, 1.1, 1);
}
}@keyframes fill {
    100% {
    box-shadow: inset 0 0 0 30px $blue;
}
}
.thanks-block {
    max-width: 960px;
    margin-left: auto;
    margin-right: auto;
    text-align: center;
    p.thanks {
      font-weight: 300;
      color: $purple;
      font-size: 2.5em;
      line-height: 50px;

      small {
        font-size:80%;
        font-weight:300;
      }
    }
  }
